-- Uis
local UIS = game:GetService("UserInputService")
local ismobile = false
-- Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Hero Hub", "Ocean")


-- Tab 1
local Tab1 = Window:NewTab("Main")
local Section1 = Tab1:NewSection("Auto Quest")



Section:NewKeybind("Toggle UI", "Toggles the UI On/Off", Enum.KeyCode.Tab, function()
	Library:ToggleUI()
end)
-- Tab2
local Tab2 = Window:NewTab("Settings")
local Section2 = Tab2:NewSection("Settings")


-- Tab 3
local Tab3 = Window:NewTab("ESP")
local Section3 = Tab3:NewSection("ESP")


-- Tab 4
local Tab4 = Window:NewTab("Other")
local Section4 = Tab4:NewSection("Other")

Section4:NewLabel("Local Player")
Section4:NewButton("Redeem all Codes", "Redeems all Avaliable codes", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/YiakngPm"))
end)

Section4:NewLabel("Server")
Section4:NewButton("Server Hop", "Server Hop to a random Server", function()
    local Player = game.Players.LocalPlayer    
    local Http = game:GetService("HttpService")
    local TPS = game:GetService("TeleportService")
    local Api = "https://games.roblox.com/v1/games/"

    local _place,_id = game.PlaceId, game.JobId
    local _servers = Api.._place.."/servers/Public?sortOrder=Desc&limit=100"
    function ListServers(cursor)
    local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
    return Http:JSONDecode(Raw)
    end

    local Next; repeat
    local Servers = ListServers(Next)
    for i,v in next, Servers.data do
        if v.playing < v.maxPlayers and v.id ~= _id then
            local s,r = pcall(TPS.TeleportToPlaceInstance,TPS,_place,v.id,Player)
            if s then break end
        end
    end
    
    Next = Servers.nextPageCursor
    until not Next
end)

Section4:NewButton("Lower Server Hop","Teleport to a server with low people", function()
    local Http = game:GetService("HttpService")
    local TPS = game:GetService("TeleportService")
    local Api = "https://games.roblox.com/v1/games/"

    local _place = game.PlaceId
    local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"
    function ListServers(cursor)
        local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
        return Http:JSONDecode(Raw)
    end

    local Server, Next; repeat
    local Servers = ListServers(Next)
    Server = Servers.data[1]
    Next = Servers.nextPageCursor
    until Server

    TPS:TeleportToPlaceInstance(_place,Server.id,game.Players.LocalPlayer)
end)

--Gui Opener
local function Mobile()
    local TextButton = Instance.new("TextButton")
    local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
    TextButton.Parent = ScreenGui
    TextButton.BackgroundColor3 = Color3.fromRGB(25, 251, 255)
    TextButton.BackgroundTransparency = 0.400
    TextButton.BorderColor3 = Color3.fromRGB(24, 129, 135)
    TextButton.BorderSizePixel = 5
    TextButton.Position = UDim2.new(0.842519701, 0, 0.434010148, 0)
    TextButton.Size = UDim2.new(0, 50, 0, 50)
    TextButton.Font = Enum.Font.DenkOne
    TextButton.Text = "OPEN"
    TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextButton.TextScaled = true
    TextButton.TextSize = 14.000
    TextButton.TextWrapped = true
    TextButton.MouseButton1Click:Connect(function()
        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Tab, false, game)
    end)
    UIAspectRatioConstraint.Parent = TextButton
end
local function OnInputTypeChanged(InputType)
    if InputType == Enum.UserInputType.Touch and not Enum.UserInputType.Keyboard then
        Mobile()
    end
end
OnInputTypeChanged(UIS:GetLastInputType())
UIS.LastInputTypeChanged:Connect(OnInputTypeChanged)
